const express = require('express');
const axios = require("axios");
const bodyParser = require('body-parser');
const multer = require('multer');
const {createFile, createGraph, searchGraph} = require("./mongoose.js")
const path = require("path")
const dotenv = require('dotenv');
dotenv.config()
const cors = require('cors');
const app = express();
app.use(cors());
app.use(bodyParser.json())
const PORT= 3001; 

const dir = __dirname + "\\uploads\\";

const storage = multer.diskStorage({
    destination: function (req, file, cb) {
        cb(null, dir); // specify the folder where you want to store the uploaded files
    },
    filename: function (req, file, cb) {
        cb(null, file.originalname);
    },
});  

const upload = multer({ storage: storage });
// app.use(upload.single())
// app.use(upload.any());

app.get("/APIKey", (req, res) => {
    const API_KEY = process.env.API_KEY;
    res.json({ API_KEY });
})

app.post('/upload-file', upload.single('file'), (req, response) => {
    const filePath = req.file.path; // full path to the uploaded file
    const fileName = req.file.filename;
    let location = path.join(__dirname, "..") + "\\public\\render\\" + path.parse(fileName).name + ".png"
    const relativeLocation = "render\\" + path.parse(fileName).name + ".png"

    searchGraph({location: relativeLocation})
        .then((res) => {
            console.log(res)
            if (res.length == 0) {
                const jsonData = {
                    file_address: "F:/Coding/hello.exe",
                    save_address: location
                }
                const config = {
                    headers: {
                        'content-type': 'application/json',
                    },
                };
                const url = "http://127.0.0.1:8000/cfg";

                axios.post(url, jsonData, config)
                    .then((r) => {
                        console.log(r.data.source + " saved at " + r.data.destination);
                        createGraph({
                            name: fileName,
                            location: relativeLocation
                        })
                        .then((resp) => {
                            response.json({ success: true, message: 'File uploaded successfully', graphLocation: relativeLocation, fileName, filePath });
                        })
                    })
                    .catch((error) => {
                        console.log(error);
                    });

            }
            else {
                response.json({ success: true, message: 'File uploaded successfully', graphLocation: res[0].location, fileName, filePath });
            }
        })
    
    
});

app.post("/add-malware", async (req, res) => {
    console.log("Malware addition request")
    console.log(req.body)
    await createFile(req.body)
    res.json({ success: true, message: 'Malware added successfully'})
})

app.listen(PORT, () => {
    console.log(`Server started on PORT ${PORT}`);
});