import React, {useState} from 'react';
import axios from 'axios';
import CryptoJS from "crypto-js"

function Form(props) {

  const [file, setFile] = useState()
  const [hash, setHash] = useState() 

  function handleChange(event) {
    let newFile = event.target.files[0];
    var reader = new FileReader();
    reader.onloadend = function (event) {
        let data = event.target.result;
        
        const hashSHA256 = CryptoJS.SHA256(data);
        const hashMD5 = CryptoJS.MD5(data);
        console.log(`SHA256: ${hashSHA256}`);
        console.log(`MD5: ${hashMD5}`);

        setHash(JSON.stringify({hashSHA256: String(hashSHA256), hashMD5: String(hashMD5)}));
    }
    reader.readAsBinaryString(newFile);

    props.onUpdate(false, null, hash);
    setFile(newFile);
  }
  
  function handleSubmit(event) {
    event.preventDefault()
    const url = 'http://localhost:3001/upload-file';
    const formData = new FormData();
    formData.append('file', file);
    formData.append('fileName', file.name);
    const config = {
        headers: {
            'content-type': 'multipart/form-data',
        },
    };

    console.log(formData);

    axios.post(url, formData, config)
        .then((response) => {
            console.log(response.data.graphLocation);
            props.onUpdate(true, file, hash, response.data.graphLocation);
        })
        .catch((error) => {
            console.log(error.message);
        })

  }

  return (
        <form className='file-upload' onSubmit={handleSubmit}>
            <input type="file" onChange={handleChange}/>
            <button type="submit">Upload</button>
        </form>
  );
}

export default Form;